# Generated by Django 5.0 on 2023-12-31 03:13

import core.models._fields
import core.validators
import django.core.validators
import django.db.models.deletion
import django_base.models.fields
import django_base.validators
import re
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('subtype', models.CharField(choices=[('ASSET', 'Asset'), ('LIABILITY', 'Liability'), ('EQUITY', 'Equity'), ('INCOME', 'Income'), ('EXPENSE', 'Expense'), ('OTHER', 'Other')], default='OTHER', max_length=9)),
                ('parent_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='child_accounts', to='core.account')),
            ],
            options={
                'verbose_name_plural': 'Account',
            },
        ),
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('subtype', models.CharField(choices=[('DISCRETE', 'DISCRETE'), ('INVENTORY', 'INVENTORY')], max_length=31)),
            ],
            options={
                'verbose_name_plural': 'Asset',
            },
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('pen_name', models.CharField(max_length=63)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BeerStyle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=63, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Brewery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=63, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Business',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CatalogItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('asin', django_base.models.fields.UpperCharField(blank=True, help_text='Amazon Standard Identification Number', max_length=10, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(10), django.core.validators.RegexValidator(code='invalid', message='Only alphanumeric characters allowed.', regex=re.compile('^[0-9a-zA-Z]*\\Z'))], verbose_name='ASIN')),
                ('ean_13', models.CharField(blank=True, help_text='European Article Number', max_length=13, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(13), django.core.validators.RegexValidator(code='invalid', message='Enter a valid digit.', regex=re.compile('^\\d+\\Z'))], verbose_name='EAN-13')),
                ('eav', models.JSONField(blank=True, null=True)),
                ('isbn', models.CharField(blank=True, help_text='International Standard Book Number', max_length=10, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(10), django.core.validators.RegexValidator(code='invalid', message='ISBN may only contain digits and "X".', regex=re.compile('^[0-9xX]+\\Z'))], verbose_name='ISBN')),
                ('isbn_13', models.CharField(blank=True, max_length=13, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(13), django.core.validators.RegexValidator(code='invalid', message='Enter a valid digit.', regex=re.compile('^\\d+\\Z')), core.validators.validate_isbn_13_check_digit], verbose_name='ISBN-13')),
                ('ismn', models.CharField(blank=True, help_text='International Standard Music Number', max_length=13, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(13)], verbose_name='ISMN')),
                ('name', models.CharField(max_length=255)),
                ('subtype', models.CharField(blank=True, choices=[('DIGITAL_SONG', 'DIGITAL_SONG'), ('MUSIC_ALBUM', 'MUSIC_ALBUM')], max_length=31, null=True)),
                ('upc_a', models.CharField(blank=True, max_length=12, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(12), django.core.validators.RegexValidator(code='invalid', message='Enter a valid digit.', regex=re.compile('^\\d+\\Z'))])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InvoiceLineItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('subtype', models.CharField(choices=[('CATALOGUE_ITEM', 'CATALOGUE_ITEM'), ('NON_CATALOGUE_ITEM', 'NON_CATALOGUE_ITEM')], max_length=31)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OrderLineItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('subtype', models.CharField(choices=[('CATALOG_ITEM', 'CATALOG_ITEM'), ('NON_CATALOG_ITEM', 'NON_CATALOG_ITEM')], max_length=31)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PointOfSaleLineItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('short_memo', models.CharField(max_length=255, null=True)),
                ('subtype', models.CharField(choices=[('CATALOGUE_ITEM', 'CATALOGUE_ITEM'), ('NON_CATALOGUE_ITEM', 'NON_CATALOGUE_ITEM')], max_length=31)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Config',
            fields=[
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('option', models.CharField(choices=[('ROOT_HEADER_TEXT', 'Root Header Text')], max_length=16, primary_key=True, serialize=False)),
                ('value', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('invoice_date', models.DateField()),
                ('invoice_number', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MediaFormat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MotionPicture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255)),
                ('disambiguator', models.CharField(blank=True, max_length=255)),
                ('year_produced', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django_base.validators.validate_year_not_future])),
            ],
        ),
        migrations.CreateModel(
            name='MusicAlbum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('is_compilation', models.BooleanField(default=False, help_text='Album is a compilation of other songs, such as a Greatest Hits album.')),
                ('title', models.CharField(max_length=255)),
                ('disambiguator', models.CharField(blank=True, max_length=255)),
                ('notes', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='MusicalInstrument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=63, unique=True)),
                ('section', models.CharField(blank=True, choices=[('B', 'Brass'), ('P', 'Percussion'), ('S', 'Strings'), ('W', 'Woodwind')], max_length=1)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MusicRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=31, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MusicTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('name', django_base.models.fields.LowerCharField(max_length=31, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NonCatalogItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('order_date', models.DateField()),
                ('order_number', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Party',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('subtype', models.CharField(choices=[('BUSINESS', 'Business'), ('PERSON', 'Person')], max_length=31)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('short_description', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True)),
                ('image_full', models.ImageField(upload_to='')),
                ('image_full_sha256', models.CharField(editable=False, max_length=64, null=True, unique=True)),
                ('image_large', models.ImageField(blank=True, editable=False, null=True, upload_to='')),
                ('image_medium', models.ImageField(blank=True, editable=False, null=True, upload_to='')),
                ('image_small', models.ImageField(blank=True, editable=False, null=True, upload_to='')),
                ('image_thumbnail', models.ImageField(blank=True, editable=False, null=True, upload_to='')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PointOfSale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('barcode', models.CharField(blank=True, max_length=255, null=True)),
                ('point_of_sale_date', models.DateField()),
                ('point_of_sale_time', models.TimeField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RecordLabel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Seller',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SongDisambiguator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('key', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('abbr', models.CharField(max_length=15)),
                ('name', models.CharField(max_length=63)),
                ('dimension', models.CharField(choices=[('AREA', 'AREA'), ('CURRENT', 'CURRENT'), ('LENGTH', 'LENGTH'), ('LIGHT', 'LIGHT'), ('MASS', 'MASS'), ('MATTER', 'MATTER'), ('TEMPERATURE', 'TEMPERATURE'), ('TIME', 'TIME'), ('VOLUME', 'VOLUME')], max_length=15, null=True)),
                ('system', models.CharField(choices=[('SI', 'SI'), ('US', 'US')], max_length=2, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='USCity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('us_state', models.CharField(choices=[('AL', 'Alabama'), ('AK', 'Alaska'), ('AR', 'Arkansas'), ('AZ', 'Arizona'), ('CA', 'California'), ('CO', 'Colorado'), ('CT', 'Connecticut'), ('DC', 'District of Columbia'), ('DE', 'Delaware'), ('FL', 'Florida'), ('GA', 'Georgia'), ('HI', 'Hawaii'), ('IA', 'Iowa'), ('ID', 'Idaho'), ('IL', 'Illinois'), ('IN', 'Indiana'), ('KS', 'Kansas'), ('KY', 'Kentucky'), ('LA', 'Louisiana'), ('MA', 'Massachusetts'), ('ME', 'Maine'), ('MD', 'Maryland'), ('MI', 'Michigan'), ('MN', 'Minnesota'), ('MO', 'Missouri'), ('MS', 'Mississippi'), ('MT', 'Montana'), ('NC', 'North Carolina'), ('ND', 'North Dakota'), ('NE', 'Nebraska'), ('NH', 'New Hampshire'), ('NJ', 'New Jersey'), ('NM', 'New Mexico'), ('NV', 'Nevada'), ('NY', 'New York'), ('OH', 'Ohio'), ('OK', 'Oklahoma'), ('OR', 'Oregon'), ('PA', 'Pennsylvania'), ('RI', 'Rhode Island'), ('SC', 'South Carolina'), ('SD', 'South Dakota'), ('TN', 'Tennessee'), ('TX', 'Texas'), ('UT', 'Utah'), ('VA', 'Virginia'), ('VT', 'Vermont'), ('WA', 'Washington'), ('WI', 'Wisconsin'), ('WV', 'West Virginia'), ('WY', 'Wyoming')], max_length=2)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('vin', django_base.models.fields.UpperCharField(max_length=17, unique=True, validators=[django.core.validators.MinLengthValidator(11)])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VideoGamePlatform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=31, unique=True)),
                ('short_name', models.CharField(blank=True, max_length=15)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VideoGameRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAsset',
            fields=[
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='account_asset', serialize=False, to='core.account')),
                ('subtype', models.CharField(choices=[('FINANCIAL', 'FINANCIAL'), ('REAL', 'REAL'), ('OTHER', 'OTHER')], default='OTHER', max_length=31)),
            ],
            options={
                'verbose_name_plural': 'Account::Asset',
            },
        ),
        migrations.CreateModel(
            name='AccountEquity',
            fields=[
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='account_equity', serialize=False, to='core.account')),
            ],
            options={
                'verbose_name_plural': 'Account::Equity',
            },
        ),
        migrations.CreateModel(
            name='AccountExpense',
            fields=[
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='account_expense', serialize=False, to='core.account')),
            ],
            options={
                'verbose_name_plural': 'Account::Expense',
            },
        ),
        migrations.CreateModel(
            name='AccountIncome',
            fields=[
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='account_income', serialize=False, to='core.account')),
            ],
            options={
                'verbose_name_plural': 'Account::Income',
            },
        ),
        migrations.CreateModel(
            name='AccountLiability',
            fields=[
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='account_liability', serialize=False, to='core.account')),
                ('account_number', models.CharField(blank=True, max_length=63, null=True)),
                ('subtype', models.CharField(choices=[('SECURED', 'SECURED'), ('OTHER', 'OTHER')], default='OTHER', max_length=15)),
            ],
            options={
                'verbose_name_plural': 'Account::Liability',
            },
        ),
        migrations.CreateModel(
            name='AssetDiscrete',
            fields=[
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('asset', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='asset_discrete', serialize=False, to='core.asset')),
                ('date_acquired', models.DateField(blank=True, null=True)),
                ('date_withdrawn', models.DateField(blank=True, null=True)),
                ('subtype', models.CharField(choices=[('CATALOG_ITEM', 'CATALOG_ITEM'), ('VEHICLE', 'VEHICLE')], default='NONE', max_length=31)),
            ],
            options={
                'verbose_name': 'Asset::Discrete',
                'verbose_name_plural': 'Asset::Discrete',
            },
        ),
        migrations.CreateModel(
            name='AssetType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('parent_asset_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='child_asset_types', to='core.assettype')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AuthorXBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='author_x_book_set', related_query_name='author_x_book', to='core.author')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='author_x_book_set', related_query_name='author_x_book', to='core.book')),
            ],
        ),
        migrations.CreateModel(
            name='BookEdition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('edition', models.PositiveSmallIntegerField()),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='book_edition_set', related_query_name='book_edition', to='core.book')),
            ],
        ),
        migrations.CreateModel(
            name='BookPublication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('book_edition', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='book_publication_set', related_query_name='book_publication', to='core.bookedition')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BookSeries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=63, unique=True)),
                ('parent_series', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sub_series', to='core.bookseries')),
            ],
            options={
                'verbose_name_plural': 'book series',
            },
        ),
        migrations.AddField(
            model_name='book',
            name='series',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='book_set', related_query_name='book', to='core.bookseries'),
        ),
        migrations.CreateModel(
            name='Beer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=63)),
                ('short_description', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True)),
                ('abv', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('style', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.beerstyle')),
                ('brewery', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.brewery')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CatalogItemBookPublication',
            fields=[
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('catalog_item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='catalog_item_book_publication', serialize=False, to='core.catalogitem')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CatalogItemDigitalSong',
            fields=[
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('catalog_item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='catalog_item_digital_song', serialize=False, to='core.catalogitem')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CatalogItemMotionPictureRecording',
            fields=[
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('catalog_item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='catalog_item_motion_picture_recording', serialize=False, to='core.catalogitem')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CatalogItemMusicAlbumProduction',
            fields=[
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('catalog_item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='catalog_item_music_album_production', serialize=False, to='core.catalogitem')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CatalogItemXCatalogItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('catalog_item_a', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.catalogitem')),
                ('catalog_item_b', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.catalogitem')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CatalogItemXInvoiceLineItem',
            fields=[
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('invoice_line_item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='catalog_item_x_invoice_line_item', serialize=False, to='core.invoicelineitem')),
                ('unit_price', core.models._fields.CurrencyField(decimal_places=5, max_digits=19)),
                ('quantity', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InvoiceLineItemXNonCatalogItem',
            fields=[
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('invoice_line_item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='invoice_line_item_x_non_catalog_item', serialize=False, to='core.invoicelineitem')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CatalogItemXOrderLineItem',
            fields=[
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('order_line_item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='catalog_item_x_order_line_item', serialize=False, to='core.orderlineitem')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CatalogItemXPointOfSaleLineItem',
            fields=[
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('point_of_sale_line_item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='catalog_item_x_point_of_sale_line_item', serialize=False, to='core.pointofsalelineitem')),
                ('quantity', models.DecimalField(decimal_places=5, default=1, max_digits=19)),
                ('unit_price', core.models._fields.CurrencyField(decimal_places=5, max_digits=19)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='invoicelineitem',
            name='invoice',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoice_line_item_set', related_query_name='invoice_line_item', to='core.invoice'),
        ),
        migrations.CreateModel(
            name='InvoiceDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('document', models.FileField(upload_to='')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoice_document_set', related_query_name='invoice_document', to='core.invoice')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('business', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='manufacturer', to='core.business')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BookXMotionPicture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='book_x_motion_picture_set', related_query_name='book_x_motion_picture', to='core.book')),
                ('motion_picture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='book_x_motion_picture_set', related_query_name='book_x_motion_picture', to='core.motionpicture')),
            ],
        ),
        migrations.CreateModel(
            name='MotionPictureRecording',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('motion_picture', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='motion_picture_recording_set', related_query_name='motion_picture_recording', to='core.motionpicture')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MotionPictureSeries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=63, unique=True)),
                ('parent_series', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sub_series', to='core.motionpictureseries')),
            ],
            options={
                'verbose_name_plural': 'motion picture series',
            },
        ),
        migrations.AddField(
            model_name='motionpicture',
            name='series',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='motion_picture_set', related_query_name='motion_picture', to='core.motionpictureseries'),
        ),
        migrations.CreateModel(
            name='MotionPictureXMusicAlbum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('motion_picture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='motion_picture_x_music_album_set', related_query_name='motion_picture_x_music_album', to='core.motionpicture')),
                ('music_album', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='motion_picture_x_music_album_set', related_query_name='motion_picture_x_music_album', to='core.musicalbum')),
            ],
        ),
        migrations.AddField(
            model_name='motionpicture',
            name='music_albums',
            field=models.ManyToManyField(blank=True, related_name='+', through='core.MotionPictureXMusicAlbum', to='core.musicalbum'),
        ),
        migrations.CreateModel(
            name='MusicAlbumArtwork',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('short_description', models.CharField(blank=True, max_length=255)),
                ('image_full', models.ImageField(upload_to='')),
                ('image_full_sha256', models.CharField(editable=False, max_length=64, null=True, unique=True)),
                ('image_large', models.ImageField(blank=True, editable=False, null=True, upload_to='')),
                ('image_medium', models.ImageField(blank=True, editable=False, null=True, upload_to='')),
                ('image_small', models.ImageField(blank=True, editable=False, null=True, upload_to='')),
                ('image_thumbnail', models.ImageField(blank=True, editable=False, null=True, upload_to='')),
                ('music_album', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='music_album_artwork_set', related_query_name='music_album_artwork', to='core.musicalbum')),
            ],
            options={
                'verbose_name_plural': 'music album artwork',
            },
        ),
        migrations.AddField(
            model_name='musicalbum',
            name='cover_artwork',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='core.musicalbumartwork'),
        ),
        migrations.CreateModel(
            name='MusicAlbumEdition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=63)),
                ('total_discs', models.PositiveSmallIntegerField(default=1)),
                ('year_copyright', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django_base.validators.validate_year_not_future])),
                ('year_produced', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django_base.validators.validate_year_not_future])),
                ('music_album', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='music_album_edition_set', related_query_name='music_album_edition', to='core.musicalbum')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MusicAlbumEditionXSongRecording',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('disc_number', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('track_number', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('music_album_edition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='music_album_edition_x_song_recording_set', related_query_name='music_album_edition_x_song_recording', to='core.musicalbumedition')),
            ],
        ),
        migrations.CreateModel(
            name='MusicAlbumProduction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('media_format', models.CharField(blank=True, choices=[('BR', 'Blu-ray'), ('CAS', 'Cassette'), ('CD', 'Cd'), ('DL', 'Digital'), ('DVD', 'Dvd'), ('VL', 'Vinyl')], max_length=3)),
                ('total_discs', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('year_produced', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django_base.validators.validate_year_not_future])),
                ('music_album_edition', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='music_album_production_set', related_query_name='music_album_production', to='core.musicalbumedition')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MusicAlbumXMusicArtist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('music_album', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='music_album_x_music_artist_set', related_query_name='music_album_x_music_artist', to='core.musicalbum')),
            ],
        ),
        migrations.CreateModel(
            name='MusicAlbumXPerson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('comments', models.TextField(blank=True, default='')),
                ('music_album', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='music_album_x_person_set', related_query_name='music_album_x_person', to='core.musicalbum')),
            ],
        ),
        migrations.CreateModel(
            name='MusicAlbumXVideoGame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('music_album', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='music_album_x_video_game_set', related_query_name='music_album_x_video_game', to='core.musicalbum')),
            ],
        ),
        migrations.CreateModel(
            name='MusicalInstrumentXPerson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('musical_instrument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='musical_instrument_x_person_set', related_query_name='musical_instrument_x_person', to='core.musicalinstrument')),
            ],
        ),
        migrations.CreateModel(
            name='MusicArtist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('disambiguator', models.CharField(blank=True, max_length=255)),
                ('website', models.URLField(blank=True, help_text='Website or homepage for this music artist.', null=True)),
                ('comments', models.TextField(blank=True, default='')),
                ('music_albums', models.ManyToManyField(blank=True, related_name='+', through='core.MusicAlbumXMusicArtist', to='core.musicalbum')),
            ],
        ),
        migrations.AddField(
            model_name='musicalbumxmusicartist',
            name='music_artist',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='music_album_x_music_artist_set', related_query_name='music_album_x_music_artist', to='core.musicartist'),
        ),
        migrations.AddField(
            model_name='musicalbum',
            name='music_artists',
            field=models.ManyToManyField(blank=True, related_name='+', through='core.MusicAlbumXMusicArtist', to='core.musicartist'),
        ),
        migrations.CreateModel(
            name='MusicArtistActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('year_active', models.PositiveSmallIntegerField(validators=[django_base.validators.validate_year_not_future])),
                ('year_inactive', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django_base.validators.validate_year_not_future])),
                ('music_artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='music_artist_activity_set', related_query_name='music_artist_activity', to='core.musicartist')),
            ],
        ),
        migrations.CreateModel(
            name='MusicArtistXPerson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('music_artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='music_artist_x_person_set', related_query_name='music_artist_x_person', to='core.musicartist')),
            ],
        ),
        migrations.CreateModel(
            name='MusicArtistXPersonActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('activity_type', models.CharField(blank=True, choices=[('OFFICIAL', 'Official Member'), ('SESSION', 'Session Musician'), ('TOURING', 'Touring Member')], max_length=8)),
                ('year_active', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('year_inactive', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('music_artist_x_person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='music_artist_x_person_activity_set', related_query_name='music_artist_x_person_activity', to='core.musicartistxperson')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MusicArtistXSong',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('music_artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='music_artist_x_song_set', related_query_name='music_artist_x_song', to='core.musicartist')),
            ],
        ),
        migrations.CreateModel(
            name='MusicArtistXSongArrangement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('music_artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='music_artist_x_song_arrangement_set', related_query_name='music_artist_x_song_arrangement', to='core.musicartist')),
            ],
        ),
        migrations.CreateModel(
            name='MusicArtistXSongPerformance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('comments', models.TextField(blank=True, default='')),
                ('music_artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='music_artist_x_song_performance_set', related_query_name='music_artist_x_song_performance', to='core.musicartist')),
            ],
        ),
        migrations.CreateModel(
            name='MusicAlbumXPersonXMusicRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('music_album_x_person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='music_album_x_person_x_music_role_set', related_query_name='music_album_x_person_x_music_role', to='core.musicalbumxperson')),
                ('music_role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='music_album_x_person_x_music_role_set', related_query_name='music_album_x_person_x_music_role', to='core.musicrole')),
            ],
        ),
        migrations.CreateModel(
            name='MusicArtistXMusicTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('music_artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='music_artist_x_music_tag_set', related_query_name='music_artist_x_music_tag', to='core.musicartist')),
                ('music_tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='music_artist_x_music_tag_set', related_query_name='music_artist_x_music_tag', to='core.musictag')),
            ],
        ),
        migrations.AddField(
            model_name='musicartist',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='+', through='core.MusicArtistXMusicTag', to='core.musictag'),
        ),
        migrations.CreateModel(
            name='MusicAlbumXMusicTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('music_album', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='music_album_x_music_tag_set', related_query_name='music_album_x_music_tag', to='core.musicalbum')),
                ('music_tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='music_album_x_music_tag_set', related_query_name='music_album_x_music_tag', to='core.musictag')),
            ],
        ),
        migrations.CreateModel(
            name='NonCatalogItemXOrderLineItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('non_catalog_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='non_catalog_item_x_order_line_item_set', related_query_name='non_catalog_item_x_order_line_item', to='core.noncatalogitem')),
                ('order_line_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='non_catalog_item_x_order_line_item_set', related_query_name='non_catalog_item_x_order_line_item', to='core.orderlineitem')),
            ],
        ),
        migrations.CreateModel(
            name='NonCatalogItemXPointOfSaleLineItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('non_catalog_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='non_catalog_item_x_point_of_sale_line_item_set', related_query_name='non_catalog_item_x_point_of_sale_line_item', to='core.noncatalogitem')),
                ('point_of_sale_line_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='non_catalog_item_x_point_of_sale_line_item_set', related_query_name='non_catalog_item_x_point_of_sale_line_item', to='core.pointofsalelineitem')),
            ],
        ),
        migrations.AddField(
            model_name='orderlineitem',
            name='order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_line_item_set', related_query_name='order_line_item', to='core.order'),
        ),
        migrations.CreateModel(
            name='OrderDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('document', models.FileField(upload_to='')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_document_set', related_query_name='order_document', to='core.order')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PartyBusiness',
            fields=[
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('party', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='party_business', serialize=False, to='core.party')),
                ('trade_name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PartyPerson',
            fields=[
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('party', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='party_person', serialize=False, to='core.party')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='order',
            name='party',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order_set', related_query_name='order', to='core.party'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='party',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invoice_set', related_query_name='invoice', to='core.party'),
        ),
        migrations.CreateModel(
            name='PartyType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('parent_party_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='child_party_types', to='core.partytype')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='party',
            name='party_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='party_set', related_query_name='party', to='core.partytype'),
        ),
        migrations.CreateModel(
            name='Payee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('memo', models.TextField(blank=True, null=True)),
                ('name', models.CharField(help_text='Name as displayed on transaction ledger.', max_length=255, unique=True)),
                ('party', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='payee_set', related_query_name='payee', to='core.party')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('preferred_name', models.CharField(max_length=255)),
                ('first_name', models.CharField(blank=True, max_length=255)),
                ('middle_name', models.CharField(blank=True, max_length=255)),
                ('last_name', models.CharField(blank=True, max_length=255)),
                ('nickname', models.CharField(blank=True, max_length=255)),
                ('prefix', models.CharField(blank=True, help_text='Title or Salutation', max_length=31)),
                ('suffix', models.CharField(blank=True, max_length=31)),
                ('date_of_birth', models.DateField(blank=True, null=True, validators=[django_base.validators.validate_date_not_future])),
                ('date_of_death', models.DateField(blank=True, null=True, validators=[django_base.validators.validate_date_not_future])),
                ('notes', models.TextField(blank=True)),
                ('music_albums', models.ManyToManyField(blank=True, related_name='+', through='core.MusicAlbumXPerson', to='core.musicalbum')),
                ('music_artists', models.ManyToManyField(blank=True, related_name='+', through='core.MusicArtistXPerson', to='core.musicartist')),
                ('musical_instruments', models.ManyToManyField(blank=True, related_name='+', through='core.MusicalInstrumentXPerson', to='core.musicalinstrument')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='musicartistxperson',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='music_artist_x_person_set', related_query_name='music_artist_x_person', to='core.person'),
        ),
        migrations.AddField(
            model_name='musicartist',
            name='personnel',
            field=models.ManyToManyField(blank=True, related_name='+', through='core.MusicArtistXPerson', to='core.person'),
        ),
        migrations.AddField(
            model_name='musicalinstrumentxperson',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='musical_instrument_x_person_set', related_query_name='musical_instrument_x_person', to='core.person'),
        ),
        migrations.AddField(
            model_name='musicalbumxperson',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='music_album_x_person_set', related_query_name='music_album_x_person', to='core.person'),
        ),
        migrations.AddField(
            model_name='musicalbum',
            name='personnel',
            field=models.ManyToManyField(blank=True, related_name='+', through='core.MusicAlbumXPerson', to='core.person'),
        ),
        migrations.CreateModel(
            name='MotionPictureXPerson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('motion_picture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='motion_picture_x_person_set', related_query_name='motion_picture_x_person', to='core.motionpicture')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='motion_picture_x_person_set', related_query_name='motion_picture_x_person', to='core.person')),
            ],
        ),
        migrations.AddField(
            model_name='author',
            name='person',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='author_set', related_query_name='author', to='core.person'),
        ),
        migrations.CreateModel(
            name='PersonXPersonRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('relation', models.CharField(choices=[('BROTHER', 'Brother'), ('CHILD', 'Child'), ('DAUGHTER', 'Daughter'), ('FATHER', 'Father'), ('GRANDCHILD', 'Grandchild'), ('GRANDDAUGHTER', 'Granddaughter'), ('GRANDFATHER', 'Grandfather'), ('GRANDMOTHER', 'Grandmother'), ('GRANDPARENT', 'Grandparent'), ('GRANDSON', 'Grandson'), ('MOTHER', 'Mother'), ('PARENT', 'Parent'), ('SIBLING', 'Sibling'), ('SISTER', 'Sister'), ('SON', 'Son')], help_text="Relation FROM Person A TO Person B. Person A is Person B's ...", max_length=13)),
                ('person_a', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.person')),
                ('person_b', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.person')),
            ],
        ),
        migrations.CreateModel(
            name='PersonXPersonRelationship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('relationship', models.CharField(blank=True, choices=[('CLASSMATE', 'Classmate'), ('FRIEND', 'Friend'), ('HUSBAND', 'Husband'), ('INSTRUCTOR', 'Instructor'), ('PARTNER', 'Partner'), ('SCHOOLMATE', 'Schoolmate'), ('SPOUSE', 'Spouse'), ('STUDENT', 'Student'), ('TEACHER', 'Teacher'), ('WIFE', 'Wife')], help_text="The relationship FROM person A TO person B. Person A is Person B's ...", max_length=10)),
                ('person_a', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.person')),
                ('person_b', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.person')),
            ],
        ),
        migrations.CreateModel(
            name='PersonXPersonRelationshipActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('from_year', models.PositiveSmallIntegerField()),
                ('until_year', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('person_x_person_relationship', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='person_x_person_relationship_activity_set', related_query_name='person_x_person_relationship_activity', to='core.personxpersonrelationship')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PersonXPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='person_x_photo_set', related_query_name='person_x_photo', to='core.person')),
                ('photo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='person_x_photo_set', related_query_name='person_x_photo', to='core.photo')),
            ],
        ),
        migrations.AddField(
            model_name='person',
            name='featured_photo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='core.personxphoto'),
        ),
        migrations.CreateModel(
            name='PersonXSong',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='person_x_song_set', related_query_name='person_x_song', to='core.person')),
            ],
        ),
        migrations.CreateModel(
            name='MusicRoleXPersonXSong',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('music_role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='music_role_x_person_x_song_set', related_query_name='music_role_x_person_x_song', to='core.musicrole')),
                ('person_x_song', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='music_role_x_person_x_song_set', related_query_name='music_role_x_person_x_song', to='core.personxsong')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PersonXSongArrangement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='person_x_song_arrangement_set', related_query_name='person_x_song_arrangement', to='core.person')),
            ],
        ),
        migrations.CreateModel(
            name='PersonXSongPerformance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='person_x_song_performance_set', related_query_name='person_x_song_performance', to='core.person')),
            ],
        ),
        migrations.CreateModel(
            name='PersonXVideoGame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='person_x_video_game_set', related_query_name='person_x_video_game', to='core.person')),
            ],
        ),
        migrations.AddField(
            model_name='pointofsalelineitem',
            name='point_of_sale',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='line_items', to='core.pointofsale'),
        ),
        migrations.AddField(
            model_name='pointofsale',
            name='party',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='point_of_sale_set', related_query_name='point_of_sale', to='core.party'),
        ),
        migrations.CreateModel(
            name='PointOfSaleDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('document', models.FileField(upload_to='')),
                ('point_of_sale', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='point_of_sale_document_set', related_query_name='point_of_sale_document', to='core.pointofsale')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255)),
                ('lyrics', models.TextField(blank=True, default='')),
                ('music_artists', models.ManyToManyField(blank=True, related_name='+', through='core.MusicArtistXSong', to='core.musicartist')),
                ('personnel', models.ManyToManyField(blank=True, related_name='+', through='core.PersonXSong', to='core.person')),
                ('disambiguator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='song_set', related_query_name='song', to='core.songdisambiguator')),
            ],
        ),
        migrations.AddField(
            model_name='personxsong',
            name='song',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='person_x_song_set', related_query_name='person_x_song', to='core.song'),
        ),
        migrations.AddField(
            model_name='musicartistxsong',
            name='song',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='music_artist_x_song_set', related_query_name='music_artist_x_song', to='core.song'),
        ),
        migrations.AddField(
            model_name='musicartist',
            name='songs',
            field=models.ManyToManyField(blank=True, related_name='+', through='core.MusicArtistXSong', to='core.song'),
        ),
        migrations.CreateModel(
            name='MotionPictureXSong',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('motion_picture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='motion_picture_x_song_set', related_query_name='motion_picture_x_song', to='core.motionpicture')),
                ('song', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='motion_picture_x_song_set', related_query_name='motion_picture_x_song', to='core.song')),
            ],
        ),
        migrations.AddField(
            model_name='motionpicture',
            name='songs',
            field=models.ManyToManyField(blank=True, related_name='+', through='core.MotionPictureXSong', to='core.song'),
        ),
        migrations.CreateModel(
            name='SongArrangement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('lyrics', models.TextField(blank=True, default='')),
                ('is_original', models.BooleanField(default=True)),
                ('music_artists', models.ManyToManyField(blank=True, related_name='+', through='core.MusicArtistXSongArrangement', to='core.musicartist')),
                ('personnel', models.ManyToManyField(blank=True, related_name='+', through='core.PersonXSongArrangement', to='core.person')),
                ('disambiguator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='song_arrangement_set', related_query_name='song_arrangement', to='core.songdisambiguator')),
            ],
        ),
        migrations.AddField(
            model_name='personxsongarrangement',
            name='song_arrangement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='person_x_song_arrangement_set', related_query_name='person_x_song_arrangement', to='core.songarrangement'),
        ),
        migrations.AddField(
            model_name='musicartistxsongarrangement',
            name='song_arrangement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='music_artist_x_song_arrangement_set', related_query_name='music_artist_x_song_arrangement', to='core.songarrangement'),
        ),
        migrations.AddField(
            model_name='musicartist',
            name='arrangements',
            field=models.ManyToManyField(blank=True, related_name='+', through='core.MusicArtistXSongArrangement', to='core.songarrangement'),
        ),
        migrations.CreateModel(
            name='SongPerformance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('description', models.CharField(blank=True, max_length=63)),
                ('performance_type', models.CharField(choices=[('DEMO', 'Demo Recording'), ('LIVE', 'Live Performance'), ('STUDIO', 'Studio Recording')], default='STUDIO', max_length=6)),
                ('music_artists', models.ManyToManyField(blank=True, related_name='+', through='core.MusicArtistXSongPerformance', to='core.musicartist')),
                ('personnel', models.ManyToManyField(blank=True, related_name='+', through='core.PersonXSongPerformance', to='core.person')),
                ('song_arrangement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='song_performance_set', related_query_name='song_performance', to='core.songarrangement')),
            ],
        ),
        migrations.AddField(
            model_name='personxsongperformance',
            name='song_performance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='person_x_song_performance_set', related_query_name='person_x_song_performance', to='core.songperformance'),
        ),
        migrations.AddField(
            model_name='person',
            name='song_performances',
            field=models.ManyToManyField(blank=True, related_name='+', through='core.PersonXSongPerformance', to='core.songperformance'),
        ),
        migrations.AddField(
            model_name='musicartistxsongperformance',
            name='song_performance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='music_artist_x_song_performance_set', related_query_name='music_artist_x_song_performance', to='core.songperformance'),
        ),
        migrations.AddField(
            model_name='musicartist',
            name='performances',
            field=models.ManyToManyField(blank=True, related_name='+', through='core.MusicArtistXSongPerformance', to='core.songperformance'),
        ),
        migrations.CreateModel(
            name='SongRecording',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('duration', models.DurationField(blank=True, null=True, validators=[django_base.validators.validate_positive_timedelta])),
                ('music_album_editions', models.ManyToManyField(blank=True, related_name='+', through='core.MusicAlbumEditionXSongRecording', to='core.musicalbumedition')),
                ('song_performance', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='song_recording_set', related_query_name='song_recording', to='core.songperformance')),
            ],
        ),
        migrations.AddField(
            model_name='musicalbumeditionxsongrecording',
            name='song_recording',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='music_album_edition_x_song_recording_set', related_query_name='music_album_edition_x_song_recording', to='core.songrecording'),
        ),
        migrations.AddField(
            model_name='musicalbumedition',
            name='song_recordings',
            field=models.ManyToManyField(blank=True, related_name='+', through='core.MusicAlbumEditionXSongRecording', to='core.songrecording'),
        ),
        migrations.CreateModel(
            name='SongXSongArrangement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('song', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='song_x_song_arrangement_set', related_query_name='song_x_song_arrangement', to='core.song')),
                ('song_arrangement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='song_x_song_arrangement_set', related_query_name='song_x_song_arrangement', to='core.songarrangement')),
            ],
        ),
        migrations.AddField(
            model_name='songarrangement',
            name='songs',
            field=models.ManyToManyField(blank=True, related_name='+', through='core.SongXSongArrangement', to='core.song'),
        ),
        migrations.AddField(
            model_name='song',
            name='arrangements',
            field=models.ManyToManyField(blank=True, related_name='+', through='core.SongXSongArrangement', to='core.songarrangement'),
        ),
        migrations.CreateModel(
            name='Txn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('memo', models.TextField(blank=True, null=True)),
                ('ref_total', core.models._fields.CurrencyField(blank=True, decimal_places=5, help_text='Total transaction amount reflected on statement.', max_digits=19, null=True, verbose_name='Reference Total')),
                ('txn_date', models.DateField()),
                ('payee', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='txn_set', related_query_name='txn', to='core.payee')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='pointofsale',
            name='txn',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='point_of_sale', to='core.txn'),
        ),
        migrations.CreateModel(
            name='InvoiceXTxn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.invoice')),
                ('txn', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.txn')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TxnLineItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('amount', core.models._fields.CurrencyField(decimal_places=5, max_digits=19)),
                ('debit', models.BooleanField(default=False)),
                ('memo', models.TextField(blank=True, null=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='txn_line_item_set', related_query_name='txn_line_item', to='core.account')),
                ('txn', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='line_items', to='core.txn')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='brewery',
            name='city',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.uscity'),
        ),
        migrations.CreateModel(
            name='VehicleMake',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='Make/Brand/Marque', max_length=255, unique=True)),
                ('manufacturer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vehicle_make_set', related_query_name='vehicle_make', to='core.manufacturer')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VehicleMileage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('odometer_date', models.DateField(help_text='Date on which this odometer reading was captured', validators=[django_base.validators.validate_date_not_future])),
                ('odometer_miles', models.PositiveIntegerField(help_text='Odometer reading in miles')),
                ('odometer_time', models.TimeField(blank=True, help_text='Time of this reading, if available', null=True)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='vehicle_mileage_set', related_query_name='vehicle_mileage', to='core.vehicle')),
            ],
        ),
        migrations.CreateModel(
            name='VehicleModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='Model name, such as 3000GT, Forte, Supra', max_length=255)),
                ('vehicle_make', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='vehicle_model_set', related_query_name='vehicle_model', to='core.vehiclemake')),
            ],
        ),
        migrations.CreateModel(
            name='VehicleService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('date_in', models.DateField()),
                ('date_out', models.DateField(blank=True, null=True)),
                ('mileage_in', models.IntegerField()),
                ('mileage_out', models.IntegerField()),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='vehicle_service_set', related_query_name='vehicle_service', to='core.vehicle')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VehicleServiceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('description', models.CharField(max_length=255)),
                ('vehicle_service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicle_service_item_set', related_query_name='vehicle_service_item', to='core.vehicleservice')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VehicleTrim',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='Trim Level, such as EX, GT, SS', max_length=255)),
                ('vehicle_model', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='vehicle_trim_set', related_query_name='vehicle_trim', to='core.vehiclemodel')),
            ],
        ),
        migrations.CreateModel(
            name='VehicleYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('year', models.IntegerField(help_text='Production year', validators=[django.core.validators.MinValueValidator(1886), django_base.validators.validate_year_not_future])),
                ('vehicle_trim', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='vehicle_year_set', related_query_name='vehicle_year', to='core.vehicletrim')),
            ],
        ),
        migrations.AddField(
            model_name='vehicle',
            name='vehicle_year',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='vehicle_set', related_query_name='vehicle', to='core.vehicleyear'),
        ),
        migrations.CreateModel(
            name='VideoGame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=100)),
                ('disambiguator', models.CharField(blank=True, max_length=255)),
                ('music_albums', models.ManyToManyField(blank=True, related_name='+', through='core.MusicAlbumXVideoGame', to='core.musicalbum')),
                ('personnel', models.ManyToManyField(blank=True, related_name='+', through='core.PersonXVideoGame', to='core.person')),
            ],
        ),
        migrations.AddField(
            model_name='personxvideogame',
            name='video_game',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='person_x_video_game_set', related_query_name='person_x_video_game', to='core.videogame'),
        ),
        migrations.AddField(
            model_name='musicalbumxvideogame',
            name='video_game',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='music_album_x_video_game_set', related_query_name='music_album_x_video_game', to='core.videogame'),
        ),
        migrations.CreateModel(
            name='VideoGameAddon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('video_game', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='video_game_addon_set', related_query_name='video_game_addon', to='core.videogame')),
            ],
        ),
        migrations.CreateModel(
            name='VideoGameEdition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('video_game', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='video_game_edition_set', related_query_name='video_game_edition', to='core.videogame')),
            ],
        ),
        migrations.CreateModel(
            name='CatalogItemXVideoGameEdition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('catalog_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='catalog_item_x_video_game_edition_set', related_query_name='catalog_item_x_video_game_edition', to='core.catalogitem')),
                ('video_game_edition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='catalog_item_x_video_game_edition_set', related_query_name='catalog_item_x_video_game_edition', to='core.videogameedition')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VideoGameEditionXVideoGamePlatform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('video_game_edition', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='video_game_edition_x_video_game_platform_set', related_query_name='video_game_edition_x_video_game_platform', to='core.videogameedition')),
                ('video_game_platform', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='video_game_edition_x_video_game_platform_set', related_query_name='video_game_edition_x_video_game_platform', to='core.videogameplatform')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VideoGamePlatformEdition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=31)),
                ('video_game_platform', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='video_game_platform_edition_set', related_query_name='video_game_platform_edition', to='core.videogameplatform')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CatalogItemXVideoGamePlatformEdition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('catalog_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='catalog_item_x_video_game_platform_edition_set', related_query_name='catalog_item_x_video_game_platform_edition', to='core.catalogitem')),
                ('video_game_platform_edition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='catalog_item_x_video_game_platform_edition_set', related_query_name='catalog_item_x_video_game_platform_edition', to='core.videogameplatformedition')),
            ],
        ),
        migrations.CreateModel(
            name='VideoGamePlatformRegion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('region', models.CharField(blank=True, choices=[('AU', 'Australia'), ('EU', 'Europe'), ('JP', 'Japan'), ('NA', 'North America')], default='', max_length=2)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('video_game_platform', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='video_game_platform_region_set', related_query_name='video_game_platform_region', to='core.videogameplatform')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PersonXVideoGameXVideoGameRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True)),
                ('person_x_video_game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='person_x_video_game_x_video_game_role_set', related_query_name='person_x_video_game_x_video_game_role', to='core.personxvideogame')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='person_x_video_game_x_video_game_role_set', related_query_name='person_x_video_game_x_video_game_role', to='core.videogamerole')),
            ],
        ),
        migrations.CreateModel(
            name='VideoGameSeries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=63, unique=True)),
                ('parent_series', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sub_series', to='core.videogameseries')),
            ],
            options={
                'verbose_name_plural': 'video game series',
            },
        ),
        migrations.AddField(
            model_name='videogame',
            name='series',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='video_game_set', related_query_name='video_game', to='core.videogameseries'),
        ),
        migrations.CreateModel(
            name='AccountAssetFinancial',
            fields=[
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('account_asset', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='account_asset_financial', serialize=False, to='core.accountasset')),
                ('account_number', models.CharField(blank=True, max_length=63, null=True)),
            ],
            options={
                'verbose_name_plural': 'Account::Asset::Financial',
            },
        ),
        migrations.CreateModel(
            name='AccountAssetReal',
            fields=[
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('account_asset', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='account_asset_real', serialize=False, to='core.accountasset')),
            ],
            options={
                'verbose_name_plural': 'Account::Asset::Real',
            },
        ),
        migrations.CreateModel(
            name='AccountLiabilitySecured',
            fields=[
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('account_liability', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='account_liability_secured', serialize=False, to='core.accountliability')),
            ],
            options={
                'verbose_name_plural': 'Account::Liability::Secured',
            },
        ),
        migrations.CreateModel(
            name='AssetDiscreteVehicle',
            fields=[
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('asset_discrete', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='asset_discrete_vehicle', serialize=False, to='core.assetdiscrete')),
            ],
            options={
                'verbose_name': 'Asset::Discrete::Vehicle',
                'verbose_name_plural': 'Asset::Discrete::Vehicle',
            },
        ),
        migrations.CreateModel(
            name='AssetDiscreteXCatalogItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('catalog_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asset_discrete_x_catalog_item_set', related_query_name='asset_discrete_x_catalog_item', to='core.catalogitem')),
                ('asset_discrete', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asset_discrete_x_catalog_item_set', related_query_name='asset_discrete_x_catalog_item', to='core.assetdiscrete')),
            ],
            options={
                'verbose_name': 'Asset::Discrete::CatalogItem',
                'verbose_name_plural': 'Asset::Discrete::CatalogItem',
            },
        ),
        migrations.CreateModel(
            name='AssetInventory',
            fields=[
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('asset', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='asset_inventory', serialize=False, to='core.asset')),
                ('quantity', models.IntegerField(default=1)),
                ('catalog_item', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='asset_inventory', to='core.catalogitem')),
            ],
            options={
                'verbose_name': 'Asset::Inventory',
                'verbose_name_plural': 'Asset::Inventory',
            },
        ),
        migrations.AddConstraint(
            model_name='authorxbook',
            constraint=models.UniqueConstraint(fields=('author', 'book'), name='unique_author_x_book'),
        ),
        migrations.AddConstraint(
            model_name='bookedition',
            constraint=models.UniqueConstraint(fields=('book', 'edition'), name='unique_book_edition'),
        ),
        migrations.AddField(
            model_name='catalogitembookpublication',
            name='book_publication',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='catalog_item_book_publication_set', related_query_name='catalog_item_book_publication', to='core.bookpublication'),
        ),
        migrations.AddField(
            model_name='catalogitemdigitalsong',
            name='song_recording',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='catalog_item_digital_song', to='core.songrecording'),
        ),
        migrations.AddField(
            model_name='catalogitemmotionpicturerecording',
            name='motion_picture_recording',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='catalog_item_motion_picture_recording_set', related_query_name='catalog_item_motion_picture_recording', to='core.motionpicturerecording'),
        ),
        migrations.AddField(
            model_name='catalogitemmusicalbumproduction',
            name='music_album_production',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='catalog_item_music_album_production_set', related_query_name='catalog_item_music_album_production', to='core.musicalbumproduction'),
        ),
        migrations.AddField(
            model_name='catalogitemxinvoicelineitem',
            name='catalog_item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='catalog_item_x_invoice_line_item_set', related_query_name='catalog_item_x_invoice_line_item', to='core.catalogitem'),
        ),
        migrations.AddField(
            model_name='invoicelineitemxnoncatalogitem',
            name='non_catalog_item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoice_line_item_x_non_catalog_item_set', related_query_name='invoice_line_item_x_non_catalog_item', to='core.noncatalogitem'),
        ),
        migrations.AddField(
            model_name='catalogitemxorderlineitem',
            name='catalog_item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='catalog_item_x_order_line_item_set', related_query_name='catalog_item_x_order_line_item', to='core.catalogitem'),
        ),
        migrations.AddField(
            model_name='catalogitemxpointofsalelineitem',
            name='catalog_item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='catalog_item_x_point_of_sale_line_item_set', related_query_name='catalog_item_x_point_of_sale_line_item', to='core.catalogitem'),
        ),
        migrations.AddField(
            model_name='catalogitemxpointofsalelineitem',
            name='unit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='catalog_item_x_point_of_sale_line_item_set', related_query_name='catalog_item_x_point_of_sale_line_item', to='core.unit'),
        ),
        migrations.AddConstraint(
            model_name='bookxmotionpicture',
            constraint=models.UniqueConstraint(fields=('book', 'motion_picture'), name='unique_book_x_motion_picture'),
        ),
        migrations.AddConstraint(
            model_name='motionpicturexmusicalbum',
            constraint=models.UniqueConstraint(fields=('motion_picture', 'music_album'), name='unique_motion_picture_x_music_album'),
        ),
        migrations.AddConstraint(
            model_name='musicalbumxmusicartist',
            constraint=models.UniqueConstraint(fields=('music_album', 'music_artist'), name='unique_music_album_x_music_artist'),
        ),
        migrations.AddConstraint(
            model_name='musicartistactivity',
            constraint=models.UniqueConstraint(fields=('music_artist', 'year_active'), name='unique_music_artist_activity'),
        ),
        migrations.AddConstraint(
            model_name='musicalbumxpersonxmusicrole',
            constraint=models.UniqueConstraint(fields=('music_role', 'music_album_x_person'), name='unique_music_album_x_person_role'),
        ),
        migrations.AddConstraint(
            model_name='musicartistxmusictag',
            constraint=models.UniqueConstraint(fields=('music_artist', 'music_tag'), name='unique_music_artist_x_music_tag'),
        ),
        migrations.AddConstraint(
            model_name='musicalbumxmusictag',
            constraint=models.UniqueConstraint(fields=('music_album', 'music_tag'), name='unique_music_album_x_music_tag'),
        ),
        migrations.AddConstraint(
            model_name='noncatalogitemxorderlineitem',
            constraint=models.UniqueConstraint(fields=('non_catalog_item', 'order_line_item'), name='unique_non_catalog_item_x_order_line_item'),
        ),
        migrations.AddConstraint(
            model_name='noncatalogitemxpointofsalelineitem',
            constraint=models.UniqueConstraint(fields=('non_catalog_item', 'point_of_sale_line_item'), name='unique_non_catalog_item_x_point_of_sale_line_item'),
        ),
        migrations.AddField(
            model_name='partybusiness',
            name='business',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='party_business', to='core.business'),
        ),
        migrations.AddField(
            model_name='partyperson',
            name='person',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='party_person', to='core.person'),
        ),
        migrations.AddConstraint(
            model_name='musicartistxperson',
            constraint=models.UniqueConstraint(fields=('music_artist', 'person'), name='unique_music_artist_x_person'),
        ),
        migrations.AddConstraint(
            model_name='musicalinstrumentxperson',
            constraint=models.UniqueConstraint(fields=('musical_instrument', 'person'), name='unique_musical_instrument_x_person'),
        ),
        migrations.AddConstraint(
            model_name='musicalbumxperson',
            constraint=models.UniqueConstraint(fields=('music_album', 'person'), name='unique_music_album_x_person'),
        ),
        migrations.AddConstraint(
            model_name='musicalbum',
            constraint=models.UniqueConstraint(fields=('title', 'disambiguator'), name='music_album_unique'),
        ),
        migrations.AddConstraint(
            model_name='motionpicturexperson',
            constraint=models.UniqueConstraint(fields=('motion_picture', 'person'), name='unique_motion_picture_x_person'),
        ),
        migrations.AddConstraint(
            model_name='personxpersonrelation',
            constraint=models.UniqueConstraint(fields=('person_a', 'person_b'), name='unique_person_x_person_relation'),
        ),
        migrations.AddConstraint(
            model_name='personxpersonrelation',
            constraint=models.CheckConstraint(check=models.Q(('person_a', models.F('person_b')), _negated=True), name='person_x_person_relation_not_self'),
        ),
        migrations.AddConstraint(
            model_name='personxpersonrelationship',
            constraint=models.UniqueConstraint(fields=('person_a', 'person_b'), name='unique_person_x_person_relationship'),
        ),
        migrations.AddConstraint(
            model_name='personxpersonrelationship',
            constraint=models.CheckConstraint(check=models.Q(('person_a', models.F('person_b')), _negated=True), name='person_x_person_relationship_not_self'),
        ),
        migrations.AddConstraint(
            model_name='personxphoto',
            constraint=models.UniqueConstraint(fields=('person', 'photo'), name='unique_person_x_photo'),
        ),
        migrations.AddConstraint(
            model_name='personxsong',
            constraint=models.UniqueConstraint(fields=('person', 'song'), name='unique_person_x_song'),
        ),
        migrations.AddConstraint(
            model_name='musicartistxsong',
            constraint=models.UniqueConstraint(fields=('music_artist', 'song'), name='unique_music_artist_x_song'),
        ),
        migrations.AddConstraint(
            model_name='motionpicturexsong',
            constraint=models.UniqueConstraint(fields=('motion_picture', 'song'), name='unique_motion_picture_x_song'),
        ),
        migrations.AddConstraint(
            model_name='motionpicture',
            constraint=models.UniqueConstraint(fields=('title', 'disambiguator'), name='unique_motion_picture'),
        ),
        migrations.AddConstraint(
            model_name='personxsongarrangement',
            constraint=models.UniqueConstraint(fields=('person', 'song_arrangement'), name='unique_person_x_song_arrangement'),
        ),
        migrations.AddConstraint(
            model_name='musicartistxsongarrangement',
            constraint=models.UniqueConstraint(fields=('music_artist', 'song_arrangement'), name='unique_music_artist_x_song_arrangement'),
        ),
        migrations.AddConstraint(
            model_name='songperformance',
            constraint=models.UniqueConstraint(fields=('description', 'song_arrangement'), name='unique_song_performance'),
        ),
        migrations.AddConstraint(
            model_name='personxsongperformance',
            constraint=models.UniqueConstraint(fields=('person', 'song_performance'), name='unique_person_x_song_performance'),
        ),
        migrations.AddConstraint(
            model_name='musicartistxsongperformance',
            constraint=models.UniqueConstraint(fields=('music_artist', 'song_performance'), name='unique_music_artist_x_song_performance'),
        ),
        migrations.AddConstraint(
            model_name='musicartist',
            constraint=models.UniqueConstraint(fields=('name', 'disambiguator'), name='unique_music_artist'),
        ),
        migrations.AddConstraint(
            model_name='songrecording',
            constraint=models.UniqueConstraint(fields=('duration', 'song_performance'), name='unique_song_recording'),
        ),
        migrations.AddConstraint(
            model_name='musicalbumeditionxsongrecording',
            constraint=models.UniqueConstraint(fields=('music_album_edition', 'song_recording'), name='unique_music_album_edition_x_song_recording'),
        ),
        migrations.AddConstraint(
            model_name='musicalbumeditionxsongrecording',
            constraint=models.UniqueConstraint(fields=('music_album_edition', 'disc_number', 'track_number'), name='unique_music_album_edition_x_song_recording_disc_track'),
        ),
        migrations.AddConstraint(
            model_name='songxsongarrangement',
            constraint=models.UniqueConstraint(fields=('song', 'song_arrangement'), name='unique_song_x_song_arrangement'),
        ),
        migrations.AddConstraint(
            model_name='songarrangement',
            constraint=models.UniqueConstraint(fields=('title', 'disambiguator', 'description'), name='unique_song_arrangement', nulls_distinct=True),
        ),
        migrations.AddConstraint(
            model_name='songarrangement',
            constraint=models.CheckConstraint(check=models.Q(('is_original', False), ('description', ''), _connector='OR'), name='check_song_arrangement_original'),
        ),
        migrations.AddConstraint(
            model_name='song',
            constraint=models.UniqueConstraint(fields=('title', 'disambiguator'), name='unique_song', nulls_distinct=False),
        ),
        migrations.AddConstraint(
            model_name='vehiclemileage',
            constraint=models.UniqueConstraint(fields=('vehicle', 'odometer_date', 'odometer_time'), name='unique_vehicle_mileage'),
        ),
        migrations.AddConstraint(
            model_name='vehiclemodel',
            constraint=models.UniqueConstraint(fields=('name', 'vehicle_make'), name='unique_vehicle_model'),
        ),
        migrations.AddConstraint(
            model_name='vehicletrim',
            constraint=models.UniqueConstraint(fields=('name', 'vehicle_model'), name='unique_vehicle_trim'),
        ),
        migrations.AddConstraint(
            model_name='vehicleyear',
            constraint=models.UniqueConstraint(fields=('vehicle_trim', 'year'), name='unique_vehicle_year'),
        ),
        migrations.AddConstraint(
            model_name='personxvideogame',
            constraint=models.UniqueConstraint(fields=('person', 'video_game'), name='unique_person_x_video_game'),
        ),
        migrations.AddConstraint(
            model_name='musicalbumxvideogame',
            constraint=models.UniqueConstraint(fields=('music_album', 'video_game'), name='unique_music_album_x_video_game'),
        ),
        migrations.AddConstraint(
            model_name='videogameaddon',
            constraint=models.UniqueConstraint(fields=('name', 'video_game'), name='unique_video_game_addon'),
        ),
        migrations.AddConstraint(
            model_name='videogameedition',
            constraint=models.UniqueConstraint(fields=('name', 'video_game'), name='unique_video_game_edition'),
        ),
        migrations.AddConstraint(
            model_name='catalogitemxvideogameplatformedition',
            constraint=models.UniqueConstraint(fields=('catalog_item', 'video_game_platform_edition'), name='unique_catalog_item_x_video_game_platform_edition'),
        ),
        migrations.AddConstraint(
            model_name='personxvideogamexvideogamerole',
            constraint=models.UniqueConstraint(fields=('person_x_video_game', 'role'), name='unique_person_x_video_game_x_video_game_role'),
        ),
        migrations.AddConstraint(
            model_name='videogame',
            constraint=models.UniqueConstraint(fields=('title', 'disambiguator'), name='unique_video_game'),
        ),
        migrations.AddField(
            model_name='asset',
            name='account_asset_real',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='asset_set', related_query_name='asset', to='core.accountassetreal'),
        ),
        migrations.AddField(
            model_name='accountliabilitysecured',
            name='asset',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='account_liability_secured_set', related_query_name='account_liability_secured', to='core.asset'),
        ),
        migrations.AddField(
            model_name='assetdiscretevehicle',
            name='vehicle',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='asset_discrete_vehicle', to='core.vehicle'),
        ),
    ]
