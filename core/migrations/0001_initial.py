# Generated by Django 4.2 on 2023-10-01 09:01

import base.models.fields
import base.validators
import core.models.fields
import core.models.models
import core.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('subtype', models.CharField(choices=[('ASSET', 'Asset'), ('LIABILITY', 'Liability'), ('EQUITY', 'Equity'), ('INCOME', 'Income'), ('EXPENSE', 'Expense'), ('OTHER', 'Other')], default='OTHER', max_length=9)),
                ('parent_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='child_accounts', to='core.account')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('subtype', models.CharField(choices=[('DISCRETE', 'DISCRETE'), ('INVENTORY', 'INVENTORY')], max_length=31)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BookEdition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('edition', models.PositiveSmallIntegerField()),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='book_edition_set', related_query_name='book_edition', to='core.book')),
            ],
        ),
        migrations.CreateModel(
            name='CatalogItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('asin', base.models.fields.UpperCharField(blank=True, help_text='Amazon Standard Identification Number', max_length=10, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(10), django.core.validators.RegexValidator(code='invalid', message='Only alphanumeric characters allowed.', regex=re.compile('^[0-9a-zA-Z]*\\Z'))], verbose_name='ASIN')),
                ('ean_13', models.CharField(blank=True, help_text='European Article Number', max_length=13, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(13), django.core.validators.RegexValidator(code='invalid', message='Enter a valid digit.', regex=re.compile('^\\d+\\Z'))], verbose_name='EAN-13')),
                ('eav', models.JSONField(blank=True, null=True)),
                ('isbn', models.CharField(blank=True, help_text='International Standard Book Number', max_length=10, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(10), django.core.validators.RegexValidator(code='invalid', message='ISBN may only contain digits and "X".', regex=re.compile('^[0-9xX]+\\Z'))], verbose_name='ISBN')),
                ('isbn_13', models.CharField(blank=True, max_length=13, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(13), django.core.validators.RegexValidator(code='invalid', message='Enter a valid digit.', regex=re.compile('^\\d+\\Z')), core.validators.validate_isbn_13_check_digit])),
                ('ismn', models.CharField(blank=True, help_text='International Standard Music Number', max_length=13, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(13)], verbose_name='ISMN')),
                ('name', models.CharField(max_length=255)),
                ('subtype', models.CharField(blank=True, choices=[('DIGITAL_SONG', 'DIGITAL_SONG'), ('MUSIC_ALBUM', 'MUSIC_ALBUM')], max_length=31, null=True)),
                ('upc_a', models.CharField(blank=True, max_length=12, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(12), django.core.validators.RegexValidator(code='invalid', message='Enter a valid digit.', regex=re.compile('^\\d+\\Z'))])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('invoice_date', models.DateField()),
                ('invoice_number', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InvoiceLineItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('subtype', models.CharField(choices=[('CATALOGUE_ITEM', 'CATALOGUE_ITEM'), ('NON_CATALOGUE_ITEM', 'NON_CATALOGUE_ITEM')], max_length=31)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoice_line_item_set', related_query_name='invoice_line_item', to='core.invoice')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MediaFormat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MotionPicture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255)),
                ('year_produced', models.PositiveSmallIntegerField(blank=True, null=True, validators=[base.validators.validate_year_not_future])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MusicAlbum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('is_compilation', models.BooleanField(default=False, help_text='Album is a compilation of other songs, such as a Greatest Hits album.')),
                ('title', models.CharField(max_length=255, unique=True)),
                ('total_discs', models.PositiveSmallIntegerField(default=1)),
                ('year_copyright', models.PositiveSmallIntegerField(blank=True, null=True, validators=[base.validators.validate_year_not_future])),
                ('year_produced', models.PositiveSmallIntegerField(blank=True, null=True, validators=[base.validators.validate_year_not_future])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MusicAlbumEdition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('total_discs', models.PositiveSmallIntegerField(default=1)),
                ('year_copyright', models.PositiveSmallIntegerField(blank=True, null=True, validators=[base.validators.validate_year_not_future])),
                ('year_produced', models.PositiveSmallIntegerField(blank=True, null=True, validators=[base.validators.validate_year_not_future])),
                ('music_album', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='music_album_edition_set', related_query_name='music_album_edition', to='core.musicalbum')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MusicArtist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('website', models.URLField(blank=True, help_text='Website or homepage for this music artist.', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MusicArtistXPerson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('music_artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='music_artist_x_person_set', related_query_name='music_artist_x_person', to='core.musicartist')),
            ],
        ),
        migrations.CreateModel(
            name='MusicArtistXSong',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('music_artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='music_artist_x_song_set', related_query_name='music_artist_x_song', to='core.musicartist')),
            ],
        ),
        migrations.CreateModel(
            name='MusicArtistXSongRecording',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('music_artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='music_artist_x_song_recording_set', related_query_name='music_artist_x_song_recording', to='core.musicartist')),
            ],
        ),
        migrations.CreateModel(
            name='NonCatalogItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('order_date', models.DateField()),
                ('order_number', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OrderLineItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('subtype', models.CharField(choices=[('CATALOG_ITEM', 'CATALOG_ITEM'), ('NON_CATALOG_ITEM', 'NON_CATALOG_ITEM')], max_length=31)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_line_item_set', related_query_name='order_line_item', to='core.order')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Party',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('subtype', models.CharField(choices=[('BUSINESS', 'Company'), ('PERSON', 'Person')], max_length=31)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Payee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('memo', models.TextField(blank=True, null=True)),
                ('name', models.CharField(help_text='Name as displayed on transaction ledger.', max_length=255, unique=True)),
                ('party', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='payee_set', related_query_name='payee', to='core.party')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(max_length=255)),
                ('middle_name', models.CharField(blank=True, max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('date_of_death', models.DateField(blank=True, null=True)),
                ('subtype_acquaintance', models.BooleanField()),
                ('subtype_notable', models.BooleanField()),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PointOfSale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('barcode', models.CharField(blank=True, max_length=255, null=True)),
                ('point_of_sale_date', models.DateField()),
                ('point_of_sale_time', models.TimeField(blank=True, null=True)),
                ('party', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='point_of_sale_set', related_query_name='point_of_sale', to='core.party')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PointOfSaleLineItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('short_memo', models.CharField(max_length=255, null=True)),
                ('subtype', models.CharField(choices=[('CATALOGUE_ITEM', 'CATALOGUE_ITEM'), ('NON_CATALOGUE_ITEM', 'NON_CATALOGUE_ITEM')], max_length=31)),
                ('point_of_sale', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='line_items', to='core.pointofsale')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Seller',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('lyrics', models.TextField(blank=True, default='')),
                ('title', models.CharField(max_length=255)),
                ('music_artists', models.ManyToManyField(related_name='+', through='core.MusicArtistXSong', to='core.musicartist')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Txn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('memo', models.TextField(blank=True, null=True)),
                ('ref_total', core.models.fields.CurrencyField(blank=True, decimal_places=5, help_text='Total transaction amount reflected on statement.', max_digits=19, null=True, verbose_name='Reference Total')),
                ('txn_date', models.DateField()),
                ('payee', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='txn_set', related_query_name='txn', to='core.payee')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('abbr', models.CharField(max_length=15)),
                ('name', models.CharField(max_length=63)),
                ('dimension', models.CharField(choices=[('AREA', 'AREA'), ('CURRENT', 'CURRENT'), ('LENGTH', 'LENGTH'), ('LIGHT', 'LIGHT'), ('MASS', 'MASS'), ('MATTER', 'MATTER'), ('TEMPERATURE', 'TEMPERATURE'), ('TIME', 'TIME'), ('VOLUME', 'VOLUME')], max_length=15, null=True)),
                ('system', models.CharField(choices=[('SI', 'SI'), ('US', 'US')], max_length=2, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('vin', base.models.fields.UpperCharField(max_length=17, unique=True, validators=[django.core.validators.MinLengthValidator(11)])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VehicleMake',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='Make/Brand/Marque', max_length=255, unique=True)),
                ('manufacturer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vehicle_make_set', related_query_name='vehicle_make', to='core.manufacturer')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VehicleModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='Model name, such as 3000GT, Forte, Supra', max_length=255)),
                ('vehicle_make', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='vehicle_model_set', related_query_name='vehicle_model', to='core.vehiclemake')),
            ],
        ),
        migrations.CreateModel(
            name='VehicleService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('date_in', models.DateField()),
                ('date_out', models.DateField(blank=True, null=True)),
                ('mileage_in', models.IntegerField()),
                ('mileage_out', models.IntegerField()),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='vehicle_service_set', related_query_name='vehicle_service', to='core.vehicle')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VehicleTrim',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='Trim Level, such as EX, GT, SS', max_length=255)),
                ('vehicle_model', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='vehicle_trim_set', related_query_name='vehicle_trim', to='core.vehiclemodel')),
            ],
        ),
        migrations.CreateModel(
            name='VideoGame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VideoGameEdition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('video_game', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='video_game_edition_set', related_query_name='video_game_edition', to='core.videogame')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VideoGamePlatform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=31)),
                ('short_name', models.CharField(blank=True, max_length=15)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAsset',
            fields=[
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='account_asset', serialize=False, to='core.account')),
                ('subtype', models.CharField(choices=[('FINANCIAL', 'FINANCIAL'), ('REAL', 'REAL'), ('OTHER', 'OTHER')], default='OTHER', max_length=31)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AccountEquity',
            fields=[
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='account_equity', serialize=False, to='core.account')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AccountExpense',
            fields=[
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='account_expense', serialize=False, to='core.account')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AccountIncome',
            fields=[
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='account_income', serialize=False, to='core.account')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AccountLiability',
            fields=[
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='account_liability', serialize=False, to='core.account')),
                ('account_number', models.CharField(blank=True, max_length=63, null=True)),
                ('subtype', models.CharField(choices=[('SECURED', 'SECURED'), ('OTHER', 'OTHER')], default='OTHER', max_length=15)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AssetDiscrete',
            fields=[
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('asset', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='asset_discrete', serialize=False, to='core.asset')),
                ('date_acquired', models.DateField(blank=True, null=True)),
                ('date_withdrawn', models.DateField(blank=True, null=True)),
                ('subtype', models.CharField(choices=[('CATALOG_ITEM', 'CATALOG_ITEM'), ('VEHICLE', 'VEHICLE')], default='NONE', max_length=31)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AssetInventory',
            fields=[
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('asset', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='asset_inventory', serialize=False, to='core.asset')),
                ('quantity', models.IntegerField(default=1)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CatalogItemDigitalSong',
            fields=[
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('catalog_item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='catalog_item_digital_song', serialize=False, to='core.catalogitem')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CatalogItemMusicAlbumProduction',
            fields=[
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('catalog_item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='catalog_item_music_album_production', serialize=False, to='core.catalogitem')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CatalogItemXInvoiceLineItem',
            fields=[
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('invoice_line_item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='catalog_item_x_invoice_line_item', serialize=False, to='core.invoicelineitem')),
                ('unit_price', core.models.fields.CurrencyField(decimal_places=5, max_digits=19)),
                ('quantity', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CatalogItemXOrderLineItem',
            fields=[
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('orderlineitem', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='catalog_item_x_order_line_item', serialize=False, to='core.orderlineitem')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CatalogItemXPointOfSaleLineItem',
            fields=[
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('point_of_sale_line_item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='catalog_item_x_point_of_sale_line_item', serialize=False, to='core.pointofsalelineitem')),
                ('quantity', models.DecimalField(decimal_places=5, default=1, max_digits=19)),
                ('unit_price', core.models.fields.CurrencyField(decimal_places=5, max_digits=19)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InvoiceLineItemXNonCatalogItem',
            fields=[
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('invoice_line_item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='invoice_line_item_x_non_catalog_item', serialize=False, to='core.invoicelineitem')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PartyBusiness',
            fields=[
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('party', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='party_business', serialize=False, to='core.party')),
                ('trade_name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PartyPerson',
            fields=[
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('party', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='party_person', serialize=False, to='core.party')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VideoGameSeries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=63)),
                ('parent_series', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sub_series', to='core.videogameseries')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VideoGameEditionXVideoGamePlatform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('video_game_edition', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='video_game_edition_x_video_game_platform_set', related_query_name='video_game_edition_x_video_game_platform', to='core.videogameedition')),
                ('video_game_platform', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='video_game_edition_x_video_game_platform_set', related_query_name='video_game_edition_x_video_game_platform', to='core.videogameplatform')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VideoGameAddon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('video_game', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='video_game_addon_set', related_query_name='video_game_addon', to='core.videogame')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='videogame',
            name='series',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='video_game_set', related_query_name='video_game', to='core.videogameseries'),
        ),
        migrations.CreateModel(
            name='VehicleYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('year', models.IntegerField(help_text='Production year', validators=[django.core.validators.MinValueValidator(1886), base.validators.validate_year_not_future])),
                ('vehicle_trim', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='vehicle_year_set', related_query_name='vehicle_year', to='core.vehicletrim')),
            ],
        ),
        migrations.CreateModel(
            name='VehicleServiceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('description', models.CharField(max_length=255)),
                ('vehicle_service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicle_service_item_set', related_query_name='vehicle_service_item', to='core.vehicleservice')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VehicleMileage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('odometer_date', models.DateField(help_text='Date on which this odometer reading was captured', validators=[base.validators.validate_date_not_future])),
                ('odometer_miles', models.PositiveIntegerField(help_text='Odometer reading in miles')),
                ('odometer_time', models.TimeField(blank=True, help_text='Time of this reading, if available', null=True)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='vehicle_mileage_set', related_query_name='vehicle_mileage', to='core.vehicle')),
            ],
        ),
        migrations.AddField(
            model_name='vehicle',
            name='vehicle_year',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='vehicle_set', related_query_name='vehicle', to='core.vehicleyear'),
        ),
        migrations.CreateModel(
            name='TxnLineItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('amount', core.models.fields.CurrencyField(decimal_places=5, max_digits=19)),
                ('debit', models.BooleanField(default=False)),
                ('memo', models.TextField(blank=True, null=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='txn_line_item_set', related_query_name='txn_line_item', to='core.account')),
                ('txn', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='line_items', to='core.txn')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SongXSong',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('song_relationship', models.CharField(choices=[('ARRANGEMENT', 'Arrangement'), ('COVER', 'Cover'), ('INSTRUMENTAL', 'Instrumental'), ('OVERTURE', 'Overture'), ('MASHUP', 'Mash-up'), ('REMIX', 'Remix')], max_length=15)),
                ('song_archetype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.song')),
                ('song_derivative', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.song')),
            ],
        ),
        migrations.CreateModel(
            name='SongRecording',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('duration', models.DurationField(blank=True, null=True, validators=[base.validators.validate_positive_timedelta])),
                ('lyrics', models.TextField(blank=True, default='')),
                ('recording_type', models.CharField(choices=[('LIVE', 'Live Performance'), ('STUDIO', 'Studio Recording')], default='STUDIO', max_length=6)),
                ('music_artists', models.ManyToManyField(related_name='+', through='core.MusicArtistXSongRecording', to='core.musicartist')),
                ('song', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='song_recording_set', related_query_name='song_recording', to='core.song')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PointOfSaleXTxn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('point_of_sale', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='point_of_sale_x_txn', to='core.pointofsale')),
                ('txn', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='point_of_sale_x_txn', to='core.txn')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PointOfSaleDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('document', models.FileField(upload_to='')),
                ('point_of_sale', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='point_of_sale_document_set', related_query_name='point_of_sale_document', to='core.pointofsale')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='pointofsale',
            name='txn',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='point_of_sale', to='core.txn'),
        ),
        migrations.CreateModel(
            name='PartyType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('parent_party_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='child_party_types', to='core.partytype')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='party',
            name='party_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='party_set', related_query_name='party', to='core.partytype'),
        ),
        migrations.AddField(
            model_name='order',
            name='party',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order_set', related_query_name='order', to='core.party'),
        ),
        migrations.AddField(
            model_name='musicartistxsongrecording',
            name='song_recording',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='music_artist_x_song_recording_set', related_query_name='music_artist_x_song_recording', to='core.songrecording'),
        ),
        migrations.AddField(
            model_name='musicartistxsong',
            name='song',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='music_artist_x_song_set', related_query_name='music_artist_x_song', to='core.song'),
        ),
        migrations.CreateModel(
            name='MusicArtistXPersonActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('date_active', models.DateField(validators=[base.validators.validate_date_not_future])),
                ('date_inactive', models.DateField(blank=True, null=True, validators=[base.validators.validate_date_not_future])),
                ('music_artist_to_person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='music_artist_x_person_activity_set', related_query_name='music_artist_x_person_activity', to='core.musicartistxperson')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='musicartistxperson',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='music_artist_x_person_set', related_query_name='music_artist_x_person', to='core.person'),
        ),
        migrations.CreateModel(
            name='MusicArtistActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('year_active', models.PositiveSmallIntegerField(validators=[base.validators.validate_year_not_future])),
                ('year_inactive', models.PositiveSmallIntegerField(blank=True, null=True, validators=[base.validators.validate_year_not_future])),
                ('music_artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='music_artist_activity_set', related_query_name='music_artist_activity', to='core.musicartist')),
            ],
        ),
        migrations.CreateModel(
            name='MusicAlbumXSongRecording',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('disc_number', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('track_number', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('music_album', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='music_album_x_song_recording_set', related_query_name='music_album_x_song_recording', to='core.musicalbum')),
                ('song_recording', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='music_album_x_song_recording_set', related_query_name='music_album_x_song_recording', to='core.songrecording')),
            ],
        ),
        migrations.CreateModel(
            name='MusicAlbumXMusicArtist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('music_album', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='music_album_x_music_artist_set', related_query_name='music_album_x_music_artist', to='core.musicalbum')),
                ('music_artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='music_album_x_music_artist_set', related_query_name='music_album_x_music_artist', to='core.musicartist')),
            ],
        ),
        migrations.CreateModel(
            name='MusicAlbumProduction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('total_discs', models.PositiveSmallIntegerField(default=1)),
                ('year_produced', models.PositiveSmallIntegerField(blank=True, null=True, validators=[base.validators.validate_year_not_future])),
                ('media_format', models.ForeignKey(default=core.models.models.get_default_media_format_audio, on_delete=django.db.models.deletion.PROTECT, related_name='music_album_production_set', related_query_name='music_album_production', to='core.mediaformat')),
                ('music_album_edition', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='music_album_production_set', related_query_name='music_album_production', to='core.musicalbumedition')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MusicAlbumArtwork',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(upload_to='')),
                ('music_album', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='music_album_artwork_set', related_query_name='music_album_artwork', to='core.musicalbum')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='musicalbum',
            name='music_artists',
            field=models.ManyToManyField(blank=True, related_name='music_albums', through='core.MusicAlbumXMusicArtist', to='core.musicartist'),
        ),
        migrations.CreateModel(
            name='MotionPictureXSong',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('motion_picture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='motion_picture_x_song_set', related_query_name='motion_picture_x_song', to='core.motionpicture')),
                ('song', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='motion_picture_x_song_set', related_query_name='motion_picture_x_song', to='core.song')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MotionPictureXMusicAlbum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('motion_picture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='motion_picture_x_music_album_set', related_query_name='motion_picture_x_music_album', to='core.motionpicture')),
                ('music_album', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='motion_picture_x_music_album_set', related_query_name='motion_picture_x_music_album', to='core.musicalbum')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MotionPictureRecording',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('motion_picture', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='motion_picture_recording_set', related_query_name='motion_picture_recording', to='core.motionpicture')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='invoice',
            name='party',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invoice_set', related_query_name='invoice', to='core.party'),
        ),
        migrations.CreateModel(
            name='CatalogItemXCatalogItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('catalog_item_a', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.catalogitem')),
                ('catalog_item_b', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.catalogitem')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BookXMotionPicture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='book_x_motion_picture_set', related_query_name='book_x_motion_picture', to='core.book')),
                ('motion_picture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='book_x_motion_picture_set', related_query_name='book_x_motion_picture', to='core.motionpicture')),
            ],
        ),
        migrations.CreateModel(
            name='BookPublication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('book_edition', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='book_publication_set', related_query_name='book_publication', to='core.bookedition')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AssetType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('parent_asset_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='child_asset_types', to='core.assettype')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAssetFinancial',
            fields=[
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('account_asset', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='account_asset_financial', serialize=False, to='core.accountasset')),
                ('account_number', models.CharField(blank=True, max_length=63, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAssetReal',
            fields=[
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('account_asset', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='account_asset_real', serialize=False, to='core.accountasset')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AccountLiabilitySecured',
            fields=[
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('account_liability', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='account_liability_secured', serialize=False, to='core.accountliability')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AssetDiscreteCatalogItem',
            fields=[
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('asset_discrete', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='asset_discrete_catalog_item', serialize=False, to='core.assetdiscrete')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AssetDiscreteVehicle',
            fields=[
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('asset_discrete', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='asset_discrete_vehicle', serialize=False, to='core.assetdiscrete')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddConstraint(
            model_name='vehicleyear',
            constraint=models.UniqueConstraint(fields=('vehicle_trim', 'year'), name='unique_vehicleyear'),
        ),
        migrations.AddConstraint(
            model_name='vehicletrim',
            constraint=models.UniqueConstraint(fields=('name', 'vehicle_model'), name='unique_vehicletrim'),
        ),
        migrations.AddConstraint(
            model_name='vehiclemodel',
            constraint=models.UniqueConstraint(fields=('name', 'vehicle_make'), name='unique_vehiclemodel'),
        ),
        migrations.AddConstraint(
            model_name='vehiclemileage',
            constraint=models.UniqueConstraint(fields=('vehicle', 'odometer_date', 'odometer_time'), name='unique_vehiclemileage'),
        ),
        migrations.AddConstraint(
            model_name='songxsong',
            constraint=models.UniqueConstraint(fields=('song_archetype', 'song_derivative'), name='unique_songtosong'),
        ),
        migrations.AddField(
            model_name='partyperson',
            name='person',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='party_person', to='core.person'),
        ),
        migrations.AddConstraint(
            model_name='musicartistxsongrecording',
            constraint=models.UniqueConstraint(fields=('music_artist', 'song_recording'), name='unique_musicartisttosongrecording'),
        ),
        migrations.AddConstraint(
            model_name='musicartistxsong',
            constraint=models.UniqueConstraint(fields=('music_artist', 'song'), name='unique_musicartisttosong'),
        ),
        migrations.AddConstraint(
            model_name='musicartistxperson',
            constraint=models.UniqueConstraint(fields=('music_artist', 'person'), name='unique_musicartisttoperson'),
        ),
        migrations.AddConstraint(
            model_name='musicartistactivity',
            constraint=models.UniqueConstraint(fields=('music_artist', 'year_active'), name='unique_musicartistactivity'),
        ),
        migrations.AddConstraint(
            model_name='musicalbumxsongrecording',
            constraint=models.UniqueConstraint(fields=('music_album', 'song_recording'), name='unique_musicalbumtosongrecording'),
        ),
        migrations.AddConstraint(
            model_name='musicalbumxsongrecording',
            constraint=models.UniqueConstraint(fields=('music_album', 'disc_number', 'track_number'), name='unique_musicalbumtosongrecording_disc_track'),
        ),
        migrations.AddConstraint(
            model_name='musicalbumxmusicartist',
            constraint=models.UniqueConstraint(fields=('music_album', 'music_artist'), name='unique_musicalbumtomusicartist'),
        ),
        migrations.AddField(
            model_name='invoicelineitemxnoncatalogitem',
            name='non_catalog_item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoice_line_item_x_non_catalog_item_set', related_query_name='invoice_line_item_x_non_catalog_item', to='core.noncatalogitem'),
        ),
        migrations.AddField(
            model_name='catalogitemxpointofsalelineitem',
            name='catalogitem',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='catalog_item_x_point_of_sale_line_item_set', related_query_name='catalog_item_x_point_of_sale_line_item', to='core.catalogitem'),
        ),
        migrations.AddField(
            model_name='catalogitemxpointofsalelineitem',
            name='unit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='catalog_item_x_point_of_sale_line_item_set', related_query_name='catalog_item_x_point_of_sale_line_item', to='core.unit'),
        ),
        migrations.AddField(
            model_name='catalogitemxorderlineitem',
            name='catalogitem',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='catalog_item_x_order_line_item_set', related_query_name='catalog_item_x_order_line_item', to='core.catalogitem'),
        ),
        migrations.AddField(
            model_name='catalogitemxinvoicelineitem',
            name='catalogitem',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='catalog_item_x_invoice_line_item_set', related_query_name='catalog_item_x_invoice_line_item', to='core.catalogitem'),
        ),
        migrations.AddField(
            model_name='catalogitemmusicalbumproduction',
            name='media_format',
            field=models.ForeignKey(default=core.models.models.get_default_media_format_audio, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='catalog_item_music_album_production_set', related_query_name='catalog_item_music_album_production', to='core.mediaformat'),
        ),
        migrations.AddConstraint(
            model_name='bookxmotionpicture',
            constraint=models.UniqueConstraint(fields=('book', 'motion_picture'), name='unique_booktomotionpicture'),
        ),
        migrations.AddConstraint(
            model_name='bookedition',
            constraint=models.UniqueConstraint(fields=('book', 'edition'), name='unique_bookedition'),
        ),
        migrations.AddField(
            model_name='assetinventory',
            name='catalog_item',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='asset_inventory', to='core.catalogitem'),
        ),
        migrations.AddField(
            model_name='assetdiscretevehicle',
            name='vehicle',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='asset_discrete_vehicle', to='core.vehicle'),
        ),
        migrations.AddField(
            model_name='assetdiscretecatalogitem',
            name='catalog_item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='asset_discrete_catalog_item_set', related_query_name='asset_discrete_catalog_item', to='core.catalogitem'),
        ),
        migrations.AddField(
            model_name='accountliabilitysecured',
            name='asset',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='account_liability_secured_set', related_query_name='account_liability_secured', to='core.asset'),
        ),
        migrations.AddField(
            model_name='accountassetreal',
            name='asset',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='account_asset_real_set', related_query_name='account_asset_real', to='core.asset'),
        ),
    ]
